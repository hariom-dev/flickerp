# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-01-04 11:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('opportunity', '0010_auto_20171230_0306'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScheduleAllotment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours', models.FloatField(blank=True, null=True, verbose_name='Hours alloted')),
                ('date', models.DateField(verbose_name='Date')),
                ('alloted_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services_alloted', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Service title')),
                ('type', models.CharField(choices=[('dedicated', 'Dedicated'), ('hourly', 'Hourly Basic'), ('shared', 'Shared'), ('estimation', 'Estimation Basis')], max_length=30, verbose_name='Services Type')),
                ('status', models.CharField(choices=[(b'open', b'Working'), (b'expected', b'Expected to Start'), (b'scheduled', b'Scheduled to Start'), (b'pause', b'paused'), (b'closed', b'closed'), (b'expire', b'expired'), (b'done', b'complted')], max_length=30, verbose_name='Services Status')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end date of services')),
                ('rating', models.CharField(max_length=50, verbose_name='Experience Label Rating')),
                ('sudo_name', models.CharField(max_length=50, verbose_name='Dev sudo Name')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_records', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='opportunity.Client')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRecords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Start Date of service')),
                ('end_date', models.DateField(verbose_name='End Date Of Service')),
                ('status', models.CharField(choices=[(b'open', b'Working'), (b'expected', b'Expected to Start'), (b'scheduled', b'Scheduled to Start'), (b'pause', b'paused'), (b'closed', b'closed'), (b'expire', b'expired'), (b'done', b'complted')], max_length=30, verbose_name='Services Status')),
                ('title', models.CharField(max_length=50, verbose_name='Service title')),
                ('per_day', models.FloatField(verbose_name='Per Day Hours')),
                ('total_hours', models.FloatField(verbose_name='total Hours of  aggrement')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='service.Service')),
            ],
        ),
        migrations.CreateModel(
            name='TimesheetFiled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='What you did ')),
                ('hours', models.FloatField(verbose_name='Hours filled')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
            ],
        ),
        migrations.CreateModel(
            name='TimesheetType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('type', models.CharField(choices=[('service', 'Service'), ('office', 'Office Work , Tech work'), ('estimation', 'Estimation'), ('meeting', 'Meetings'), ('learning', 'Learning')], max_length=100, verbose_name='Timesheet Type')),
                ('developer', models.BooleanField(default=True)),
                ('supervisore', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='timesheetfiled',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timesheets', to='service.TimesheetType'),
        ),
        migrations.AddField(
            model_name='timesheetfiled',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filled_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='timesheetfiled',
            name='help_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filled_tech_helps', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='timesheetfiled',
            name='meeting_with',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filled_meetings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='timesheetfiled',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filled', to='service.Service'),
        ),
        migrations.AddField(
            model_name='scheduleallotment',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allotments', to='service.Service'),
        ),
    ]
